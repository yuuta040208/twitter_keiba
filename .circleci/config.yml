version: 2.1

#orbs:
#  ruby: circleci/ruby@0.1.2
#
#jobs:
#  build:
#    docker:
#      - image: circleci/ruby:2.6.3-stretch-node
#        environment:
#          BUNDLE_JOBS: 3
#          BUNDLE_RETRY: 3
#          BUNDLE_PATH: vendor/bundle
#          PGHOST: 127.0.0.1
#          PGUSER: postgres
#          RAILS_ENV: test
#      - image: circleci/postgres:alpine
#        environment:
#          POSTGRES_USER: postgres
#          POSTGRES_DB: twitter_keiba_development
#          POSTGRES_PASSWORD: ""
#    steps:
#      - checkout
#
#      - restore_cache:
#          keys:
#            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#            - rails-demo-bundle-v2-
#      - run:
#          name: bunndle install
#          command: bundle check || bundle install
#      - save_cache:
#          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#          paths:
#            - vendor/bundle
#      - restore_cache:
#        keys:
#          - rails-demo-yarn-{{ checksum "yarn.lock" }}
#          - rails-demo-yarn-
#      - run:
#          name: yarn install
#          command: yarn install --cache-folder ~/.cache/yarn
#      - save_cache:
#          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
#          paths:
#            - ~/.cache/yarn
#      - run:
#          name: database wait
#          command: dockerize -wait tcp://localhost:5432 -timeout 1m
#      - run:
#          name: database setup
#          command: |
#            bundle exec rails db:create
#            bundle exec rails db:structure:load

jobs:
  deploy:
    docker:
      - image: circleci/ruby:2.6.3-stretch-node
    steps:
      - checkout
      - run:
          name: heroku deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2.1
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: master
